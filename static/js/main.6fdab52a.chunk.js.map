{"version":3,"sources":["components/dropdown.js","components/button.js","components/tracker.js","components/textInput.js","components/cardTable.js","components/cardPage.js","App.js","serviceWorker.js","index.js"],"names":["NumberOfCardsDropDown","props","React","useState","numberOfCards","setNumberOfCards","setRow","setrow","values","FormControl","variant","fullWidth","style","marginTop","marginBottom","Select","value","onChange","event","target","map","item","MenuItem","indexOf","key","fontSize","SuitDropDown","suit","setSuit","color","CardValueDropDown","cardValue","setCardValue","AddButton","onClick","disabled","Fab","marginRight","SubtractButton","ResetButton","backgroundColor","width","window","location","max","numberOfCardsPlayed","setNumberOfCardsPlayed","display","flexDirection","alignItems","justifyContent","border","borderWidth","borderColor","height","borderRadius","NameInput","TextField","inputProps","minWidth","numRows","r1","setr1","r2","setr2","r3","setr3","r4","setr4","r5","setr5","r6","setrows","rows","Table","TableHead","TableRow","TableCell","TableBody","component","scope","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fdab52a.chunk.js","sourcesContent":["import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nexport const NumberOfCardsDropDown = (props) => {\r\n    const [numberOfCards, setNumberOfCards] = React.useState('');\r\n    const setRow = props.setrow;\r\n\r\n    const handleChange = event => {\r\n        setNumberOfCards(event.target.value);\r\n        setRow(event.target.value);\r\n    };\r\n\r\n    var values = [1, 2, 3, 4, 5, 6];\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth style={{ marginTop: -10, marginBottom: -10 }} >\r\n            <Select\r\n                value={numberOfCards}\r\n                onChange={handleChange}\r\n                fullWidth\r\n            >\r\n                {values.map(item =>\r\n                    <MenuItem value={values.indexOf(item) + 1} key={item}>\r\n                        <div style={{ fontSize: 30 }}>\r\n                            {item}\r\n                        </div>\r\n                    </MenuItem>\r\n                )}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const SuitDropDown = () => {\r\n    const [suit, setSuit] = React.useState('');\r\n\r\n    const handleChange = event => {\r\n        setSuit(event.target.value);\r\n    };\r\n\r\n    var values = ['♠', '♥', '♣', '♦'];\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth style={{ marginTop: -10, marginBottom: -10 }}>\r\n            <Select\r\n                value={suit}\r\n                onChange={handleChange}\r\n                fullWidth\r\n            >\r\n                {values.map(item =>\r\n                    values.indexOf(item) % 2 == 0 ?\r\n                        <MenuItem value={values.indexOf(item)} key={item}>\r\n                            <div style={{ fontSize: 30 }}>\r\n                                {item}\r\n                            </div>\r\n                        </MenuItem>\r\n                        :\r\n                        <MenuItem value={values.indexOf(item)} key={item}>\r\n                            <div style={{ color: 'red', fontSize: 30 }}>\r\n                                {item}\r\n                            </div>\r\n                        </MenuItem>\r\n                )}\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const CardValueDropDown = () => {\r\n    const [cardValue, setCardValue] = React.useState('');\r\n\r\n    const handleChange = event => {\r\n        setCardValue(event.target.value);\r\n    };\r\n\r\n    var values = ['A', 'K', '10', '5', 'Q', 'J', '2', '3', '4', '6', '7', '8', '9']\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" fullWidth style={{ marginTop: -10, marginBottom: -10 }}>\r\n            <Select\r\n                value={cardValue}\r\n                onChange={handleChange}\r\n                fullWidth\r\n            >\r\n                {values.map(item =>\r\n                    <MenuItem value={values.indexOf(item)} key={item}>\r\n                        <div style={{ fontSize: 30 }}>\r\n                            {item}\r\n                        </div>\r\n                    </MenuItem>\r\n                )}\r\n\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SubtractIcon from '@material-ui/icons/Remove';\r\n\r\n\r\nexport const AddButton = (props) => {\r\n    const onClick = props.onClick;\r\n    const disabled = props.disabled;\r\n    return (\r\n        <Fab onClick={onClick} style={{ marginRight: 10 }} disabled={disabled}>\r\n            <AddIcon />\r\n        </Fab>\r\n    )\r\n}\r\n\r\nexport const SubtractButton = (props) => {\r\n    const onClick = props.onClick;\r\n    const disabled = props.disabled;\r\n    return (\r\n        <Fab onClick={onClick} disabled={disabled}>\r\n            <SubtractIcon />\r\n        </Fab>\r\n    )\r\n}\r\n\r\nexport const ResetButton = () => {\r\n    return (\r\n        <Fab style={{backgroundColor: '#ff6161', color: 'white', width: 150, fontSize:18}} variant=\"extended\" onClick={() => {window.location=\"/card-website\"}} >\r\n            <strong>Reset</strong>\r\n        </Fab>\r\n    )\r\n}","import { AddButton, SubtractButton } from './button';\r\nimport React from 'react';\r\n\r\nexport default (props) => {\r\n    const max = props.max;\r\n    const [numberOfCardsPlayed, setNumberOfCardsPlayed] = React.useState(0);\r\n\r\n    const handleAdd = () => {\r\n        setNumberOfCardsPlayed(numberOfCardsPlayed + 1);\r\n    }\r\n    const handleSubtract = () => {\r\n        setNumberOfCardsPlayed(numberOfCardsPlayed - 1);\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'row',marginTop: -10, marginBottom: -10}}>\r\n            <div style={{ marginRight: 20, display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: 30, border: 'solid', borderWidth: 1, borderColor: '#c4c4c4', width: 56, height: 54, borderRadius: 4 }}>\r\n                {numberOfCardsPlayed}\r\n            </div>\r\n            <AddButton style={{ marginTop: -10, marginBottom: -10 }} onClick={handleAdd} disabled={numberOfCardsPlayed + 1 > max} />\r\n            <SubtractButton style={{ marginTop: -10, marginBottom: -10 }} onClick={handleSubtract} disabled={numberOfCardsPlayed - 1 < 0} />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const NameInput = () => {\r\n\r\n    return (\r\n        <TextField inputProps={{\r\n            style: {fontSize: 20} \r\n          }} variant=\"outlined\" style={{minWidth: 150, marginTop: -10, marginBottom: -10}}/>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { NumberOfCardsDropDown, SuitDropDown, CardValueDropDown } from './dropdown';\r\nimport Tracker from './tracker';\r\nimport { NameInput } from './textInput';\r\n\r\nexport default (props) => {\r\n    var numRows = props.numRows;\r\n    const [r1, setr1] = React.useState(0);\r\n    const [r2, setr2] = React.useState(0);\r\n    const [r3, setr3] = React.useState(0);\r\n    const [r4, setr4] = React.useState(0);\r\n    const [r5, setr5] = React.useState(0);\r\n    const [r6, setr6] = React.useState(0);\r\n\r\n    var setrows = [setr1, setr2, setr3, setr4, setr5, setr6];\r\n    var rows = [r1, r2, r3, r4, r5, r6];\r\n\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell style={{fontSize:18}}><b>Set #</b></TableCell>\r\n                    <TableCell style={{fontSize:18}}><b>Suit</b></TableCell>\r\n                    <TableCell style={{fontSize:18}}><b>Value</b></TableCell>\r\n                    <TableCell style={{fontSize:18}}><b>Times Played</b></TableCell>\r\n                    <TableCell style={{fontSize:18}}><b>Name</b></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {setrows.map(item =>\r\n                    <TableRow key={setrows.indexOf(item)}>\r\n                        <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={item} /> </TableCell>\r\n                        <TableCell><SuitDropDown /></TableCell>\r\n                        <TableCell><CardValueDropDown /></TableCell>\r\n                        <TableCell><Tracker max={rows[setrows.indexOf(item)]} /></TableCell>\r\n                        <TableCell><NameInput /></TableCell>\r\n                    </TableRow>\r\n                )}\r\n                {/* <TableRow style={{padding: 0, margin: 0}}>\r\n                    <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={setr1} /> </TableCell>\r\n                    <TableCell><SuitDropDown /></TableCell>\r\n                    <TableCell><CardValueDropDown /></TableCell>\r\n                    <TableCell><Tracker max={r1} /></TableCell>\r\n                    <TableCell><NameInput /></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={setr2} /> </TableCell>\r\n                    <TableCell><SuitDropDown /></TableCell>\r\n                    <TableCell><CardValueDropDown /></TableCell>\r\n                    <TableCell><Tracker max={r2} /></TableCell>\r\n                    <TableCell><NameInput /></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={setr3} /> </TableCell>\r\n                    <TableCell><SuitDropDown /></TableCell>\r\n                    <TableCell><CardValueDropDown /></TableCell>\r\n                    <TableCell><Tracker max={r3} /></TableCell>\r\n                    <TableCell><NameInput /></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={setr4} /> </TableCell>\r\n                    <TableCell><SuitDropDown /></TableCell>\r\n                    <TableCell><CardValueDropDown /></TableCell>\r\n                    <TableCell><Tracker max={r4} /></TableCell>\r\n                    <TableCell><NameInput /></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={setr5} /> </TableCell>\r\n                    <TableCell><SuitDropDown /></TableCell>\r\n                    <TableCell><CardValueDropDown /></TableCell>\r\n                    <TableCell><Tracker max={r5} /></TableCell>\r\n                    <TableCell><NameInput /></TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\"> <NumberOfCardsDropDown setrow={setr6} /> </TableCell>\r\n                    <TableCell><SuitDropDown /></TableCell>\r\n                    <TableCell><CardValueDropDown /></TableCell>\r\n                    <TableCell><Tracker max={r6} /></TableCell>\r\n                    <TableCell><NameInput /></TableCell>\r\n                </TableRow> */}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}","import React from 'react';\r\nimport CardTable from './cardTable'\r\nimport { ResetButton } from './button'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport default () => {\r\n    var numberOfRows = 6;\r\n    return (\r\n        <div>\r\n            <CardTable numRows={numberOfRows} />\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: 70 }}>\r\n                <ResetButton />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport CardPage from './components/cardPage'\n\nfunction App() {\n  return (\n    <CardPage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}